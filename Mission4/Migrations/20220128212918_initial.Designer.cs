// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Mission4.Models;

namespace Mission4.Migrations
{
    [DbContext(typeof(MoviesContext))]
    [Migration("20220128212918_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22");

            modelBuilder.Entity("Mission4.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("cName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CategoryId");

                    b.ToTable("categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            cName = "Action/Adventure"
                        },
                        new
                        {
                            CategoryId = 2,
                            cName = "War"
                        });
                });

            modelBuilder.Entity("Mission4.Models.Director", b =>
                {
                    b.Property<int>("DirectorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("dFirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("dLastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("DirectorId");

                    b.ToTable("directors");

                    b.HasData(
                        new
                        {
                            DirectorId = 1,
                            dFirstName = "Christopher",
                            dLastName = "Nolan"
                        },
                        new
                        {
                            DirectorId = 2,
                            dFirstName = "Jon",
                            dLastName = "Watts"
                        },
                        new
                        {
                            DirectorId = 3,
                            dFirstName = "Sam",
                            dLastName = "Mendes"
                        });
                });

            modelBuilder.Entity("Mission4.Models.Movies", b =>
                {
                    b.Property<int>("MovieId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DirectorId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Edited")
                        .HasColumnType("INTEGER");

                    b.Property<string>("LentTo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .HasColumnType("TEXT")
                        .HasMaxLength(25);

                    b.Property<int>("RatingId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<ushort>("Year")
                        .HasColumnType("INTEGER");

                    b.HasKey("MovieId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DirectorId");

                    b.HasIndex("RatingId");

                    b.ToTable("responses");

                    b.HasData(
                        new
                        {
                            MovieId = 1,
                            CategoryId = 1,
                            DirectorId = 1,
                            Edited = false,
                            RatingId = 3,
                            Title = "Inception",
                            Year = (ushort)2010
                        },
                        new
                        {
                            MovieId = 2,
                            CategoryId = 1,
                            DirectorId = 2,
                            Edited = false,
                            RatingId = 3,
                            Title = "Spiderman No Way Home",
                            Year = (ushort)2021
                        },
                        new
                        {
                            MovieId = 3,
                            CategoryId = 2,
                            DirectorId = 3,
                            Edited = false,
                            RatingId = 4,
                            Title = "1917",
                            Year = (ushort)2019
                        });
                });

            modelBuilder.Entity("Mission4.Models.Rating", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("rateName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RatingId");

                    b.ToTable("ratings");

                    b.HasData(
                        new
                        {
                            RatingId = 1,
                            rateName = "G"
                        },
                        new
                        {
                            RatingId = 2,
                            rateName = "PG"
                        },
                        new
                        {
                            RatingId = 3,
                            rateName = "PG-13"
                        },
                        new
                        {
                            RatingId = 4,
                            rateName = "R"
                        });
                });

            modelBuilder.Entity("Mission4.Models.Movies", b =>
                {
                    b.HasOne("Mission4.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mission4.Models.Director", "Director")
                        .WithMany()
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Mission4.Models.Rating", "Rating")
                        .WithMany()
                        .HasForeignKey("RatingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
